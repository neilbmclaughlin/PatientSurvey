// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace PatientSurvey.AcceptanceTests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class AverageOverallCareRatingsFeature : Xunit.IUseFixture<AverageOverallCareRatingsFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "OverallCareRatings.feature"
#line hidden
        
        public AverageOverallCareRatingsFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Average Overall Care Ratings", "As a member of the public\nI want to see the average (mean) overall rating of the " +
                    "care received for each hospital.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 5
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "First Name",
                        "Last Name",
                        "Hospital",
                        "Pre-surgery health score",
                        "3 months Post-surgery health score",
                        "6 months Post-surgery health score",
                        "Overall rating of the care received"});
            table1.AddRow(new string[] {
                        "Patient",
                        "One",
                        "A",
                        "4/10",
                        "4/10",
                        "7/10",
                        "6/10"});
            table1.AddRow(new string[] {
                        "Patient",
                        "Two",
                        "A",
                        "6/10",
                        "5/10",
                        "5/10",
                        "7/10"});
            table1.AddRow(new string[] {
                        "Patient",
                        "Three",
                        "A",
                        "2/10",
                        "5/10",
                        "6/10",
                        "8/10"});
#line 6
 testRunner.Given("the following survey data:", ((string)(null)), table1, "Given ");
#line hidden
        }
        
        public virtual void SetFixture(AverageOverallCareRatingsFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Average Overall Care Ratings")]
        [Xunit.TraitAttribute("Description", "View average overall care ratings for a hospital")]
        public virtual void ViewAverageOverallCareRatingsForAHospital()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View average overall care ratings for a hospital", ((string[])(null)));
#line 12
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 13
 testRunner.When("I view the hospital list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Hospital",
                        "Average rating of the care received"});
            table2.AddRow(new string[] {
                        "A",
                        "7/10"});
#line 14
 testRunner.Then("I should see the following average overall care ratings:", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                AverageOverallCareRatingsFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                AverageOverallCareRatingsFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
